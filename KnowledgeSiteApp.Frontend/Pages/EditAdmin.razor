@page "/editadmin/{id:int}"
@inject HttpClient http
@inject IJSRuntime js
@inject NavigationManager navigate
@inherits EditAdminLayout

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>Edit Admin Account</title>
    <link rel="icon"
          type="image/x-icon"
          href="components/origami_bold_ico.ico" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="stylesheet"
          type="text/css"
          href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" />
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap"
          rel="stylesheet" />
    <link rel="stylesheet" type="text/css" href="css/main.css" />
    <link rel="stylesheet"
          type="text/css"
          href="css/common-forms-stylesheet.css" />
    <script language="javascript"
            type="text/javascript"
            src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js"></script>

    <script>
        const loadFile = (event) => {
            var output = document.getElementById("output");
            output.src = URL.createObjectURL(event.target.files[0]);
        };
    </script>
</head>
<body>
    <div class="centered-container">
        <form class="login-form">
            <!-- Header -->
            <div class="header" style="margin-top: 5px; margin-bottom: 5px">
                <table align="center">
                    <tr>
                        <td>
                            <img src="origami bold.png"
                                 class="change_password_logo_image" />
                        </td>
                        <td>
                            <p class="content-title content-no-margin"
                               style="text-align: left">
                                LearnNest
                            </p>
                            <p class="content-subtitle">Edit Admin Account</p>
                        </td>
                    </tr>
                </table>
            </div>

            <!-- Profile Picture -->
            <div class="form-group form-group-element"
                 style="align-items: baseline; margin-left: 30%">
                <div style="margin-left: 5vh">
                    <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Jennie_Porsche_A4_2022.jpg/220px-Jennie_Porsche_A4_2022.jpg"
                         id="output"
                         style="
                display: inline-flex;
                width: 20vh;
                aspect-ratio: 1/1;
                object-fit: cover;
                border-radius: 50%;
              "
                         alt="Profile Picture" />
                </div>
            </div>
            <div class="form-group form-group-element" style="margin-left: 30%">
                <div style="margin-top: 5px; margin-bottom: 5px">
                    <input id="file"
                           type="file"
                           style="font-family: inherit"
                           onchange="loadFile(event)" />
                </div>
            </div>
            <!-- Username -->
            <div class="form-group form-group-element">
                <input type="text"
                       class="form-control"
                       id="username"
                       @bind="editUser.Username"
                       aria-describedby="username"
                       placeholder="Username" />
            </div>

            <!-- Firstname -->
            <div class="form-group form-group-element">
                <input type="text"
                       class="form-control"
                       id="first_name"
                       @bind="editUser.FirstName"
                       placeholder="First Name" />
            </div>

            <!-- Lastname -->
            <div class="form-group form-group-element">
                <input type="text"
                       class="form-control"
                       id="last_name"
                       @bind="editUser.LastName"
                       placeholder="Last Name" />
            </div>

            <!-- Email -->
            <div class="form-group form-group-element">
                <input type="text"
                       class="form-control"
                       id="email"
                       @bind="editUser.Email"
                       placeholder="Email" />
            </div>

            <!-- Login button only -->
            <div>
                <button type="submit"
                        class="btn button btn-primary"
                        onclick="@HandleEditUser">
                    Change Details
                </button>
            </div>
            <div>
                <a href="login.html" class="content-link-center">Return to Account Management</a>
            </div>
        </form>
    </div>
</body>
</html>



@code {
    [Parameter] public int id { get; set; }
    private User editUser = new User();
    private string errorMessage;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            editUser = await http.GetFromJsonAsync<User>($"https://localhost:7095/api/User/{id}");
        }
        catch (Exception e)
        {
            await js.InvokeVoidAsync("alert", e.Message);
        }
    }

    private async Task HandleEditUser()
    {
        var response = await http.PutAsJsonAsync($"https://localhost:7095/api/User/updateDetails/{id}", editUser);

        if (response.IsSuccessStatusCode)
        {
            var updatedUser = await response.Content.ReadFromJsonAsync<User>();
            editUser = updatedUser;
            await js.InvokeVoidAsync("alert", "Admin updated successfully");
            navigate.NavigateTo("main");
        }
        else
        {
            var errorResponse = await response.Content.ReadFromJsonAsync<ValidationErrorResponse>();
            errorMessage = String.Join(" ", errorResponse?.Errors.SelectMany(err => err.Value));
        }
    }

    public class ValidationErrorResponse
    {
        public Dictionary<string, string[]> Errors { get; set; }
    }
}
