@page "/createAdmin"
@inject HttpClient http
@inject IJSRuntime js
@inject NavigationManager navigate

<link rel="icon" type="image/x-icon" href="origami_bold_ico.ico" />
<link rel="stylesheet" type="text/css" href="css/main.css" />
<link rel="stylesheet" type="text/css" href="css/common-forms-stylesheet.css" />

<script>
    const loadFile = (event) => {
        var output = document.getElementById("output");
        output.src = URL.createObjectURL(event.target.files[0]);
    };
</script>

<div class="centered-container">
    <form class="login-form">
        <!-- Header -->
        <div class="header" style="margin-top: 5px; margin-bottom: 5px">
            <table align="center">
                <tr>
                    <td>
                        <img src="origami bold.png" class="change_password_logo_image" />
                    </td>
                    <td>
                        <p class="content-title content-no-margin"
                           style="text-align: left">
                            LearnNest
                        </p>
                        <p class="content-subtitle">Edit Admin Account</p>
                    </td>
                </tr>
            </table>
        </div>

        <!-- Profile Picture -->
        <div class="form-group form-group-element"
             style="align-items: baseline; margin-left: 30%">
            <div style="margin-left: 5vh">
                <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Jennie_Porsche_A4_2022.jpg/220px-Jennie_Porsche_A4_2022.jpg"
                     id="output"
                     style="
                        display: inline-flex;
                        width: 20vh;
                        aspect-ratio: 1/1;
                        object-fit: cover;
                        border-radius: 50%;
                        "
                     alt="Profile Picture" />
            </div>
        </div>
        <div class="form-group form-group-element" style="margin-left: 30%">
            <div style="margin-top: 5px; margin-bottom: 5px">
                <input id="file" type="file" style="font-family: inherit" onchange="loadFile(event)" />
            </div>
        </div>

        <!-- Username -->
        <div class="form-group form-group-element">
            <input type="text"
                   class="form-control"
                   id="username"
                   @bind="newUser.Username"
                   aria-describedby="username"
                   placeholder="Username" />
        </div>

        <!-- Firstname -->
        <div class="form-group form-group-element">
            <input type="text"
                   class="form-control"
                   id="first_name"
                   @bind="newUser.FirstName"
                   placeholder="First Name" />
        </div>

        <!-- Lastname -->
        <div class="form-group form-group-element">
            <input type="text"
                   class="form-control"
                   id="last_name"
                   @bind="newUser.LastName"
                   placeholder="Last Name" />
        </div>

        <!-- Email -->
        <div class="form-group form-group-element">
            <input type="text"
                   class="form-control"
                   id="email"
                   @bind="newUser.Email"
                   placeholder="Email" />
        </div>

        <!-- Login button only -->
        <div>
            <button type="submit"
                    class="btn button btn-primary"
                    onclick="@HandleValidSubmit">
                Change Details
            </button>
        </div>

        <div>
            <a href="login.html" class="content-link-center">Return to Account Management</a>
        </div>
    </form>
</div>

@code {
    private RegisterUserDto newUser = new RegisterUserDto();
    private string errorMessage = string.Empty;



    private async Task HandleValidSubmit()
    {
        var response = await http.PostAsJsonAsync("https://localhost:7095/api/User/add", newUser);

        if (response.IsSuccessStatusCode)
        {
            await js.InvokeVoidAsync("alert", "Admin created successfully");
            navigate.NavigateTo("/viewAdmin");
        }
        else
        {
            var errorResponse = await response.Content.ReadFromJsonAsync<ValidationErrorResponse>();
            errorMessage = String.Join(" ", errorResponse?.Errors.SelectMany(err => err.Value));
        }
    }

    public class ValidationErrorResponse
    {
        public Dictionary<string, string[]> Errors { get; set; }
    }
}