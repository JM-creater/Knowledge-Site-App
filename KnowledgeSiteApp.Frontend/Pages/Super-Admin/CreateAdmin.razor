@page "/createAdmin"
@inject HttpClient http
@inject IJSRuntime js
@inject NavigationManager navigate
@using Blazored.Toast.Configuration
@inject IToastService toastService
@layout SuperAdminMainLayout
@inject AdminService service

<link rel="icon" type="image/x-icon" href="origami_bold_ico.ico" />
<link rel="stylesheet" type="text/css" href="css/main.css" />
<link rel="stylesheet" type="text/css" href="css/common-forms-stylesheet.css" />

<BlazoredToasts Position="ToastPosition.BottomRight"
                Timeout="5"
                IconType="IconType.FontAwesome"
                SuccessClass="success-toast-override"
                SuccessIcon="fa fa-thumbs-up"
                ErrorIcon="fa fa-bug" />

<div class="centered-container">
    <EditForm Model="@newUser" OnValidSubmit="@HandleAddAdmin" class="registration-form">
        <!-- Header -->
        <div class="header" style="margin-bottom: 5px">
            <table align="center">
                <tr>
                    <td>
                        <img src="origami bold.png" class="change_password_logo_image" />
                    </td>
                    <td>
                        <p class="content-title content-no-margin"
                           style="text-align: left">
                            LearnNest
                        </p>
                        <p class="content-subtitle">Add Admin Account</p>
                    </td>
                </tr>
            </table>
        </div>

        <!-- Profile Picture -->
        <div class="form-group form-group-element"
             style="align-items: baseline;">
            <div>
                @if (!string.IsNullOrEmpty(uploadedImage))
                {
                    <img src="@uploadedImage"
                         id="output"
                         style="
                         display: inline-flex;
                        width: 15vh;
                        aspect-ratio: 1/1;
                        align-content: center;
                        margin-left: 35%;
                        margin-right: auto;
                        object-fit: cover;
                        border-radius: 50%;
                                    "
                         alt="Profile Picture" />
                }
                else
                {
                    <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Jennie_Porsche_A4_2022.jpg/220px-Jennie_Porsche_A4_2022.jpg"
                         id="output"
                         style="
                        display: inline-flex;
                        width: 15vh;
                        aspect-ratio: 1/1;
                        align-content: center;
                        margin-left: 35%;
                        margin-right: auto;
                        object-fit: cover;
                        border-radius: 50%;
                                "
                         alt="Profile Picture" />
                }

            </div>
        </div>
        <div class="form-group form-group-element">
            <div style="margin-top: 5px; margin-bottom: 5px">
                <InputFile id="file" style="font-family: inherit" OnChange="UploadImage" />
            </div>
        </div>

        <!-- Username -->
        <div class="form-group form-group-element">
            <input type="text"
                   class="form-control"
                   id="username"
                   @bind="newUser.Username"
                   aria-describedby="username"
                   placeholder="Username" />
        </div>

        <!-- Firstname -->
        <div class="form-group form-group-element">
            <input type="text"
                   class="form-control"
                   id="first_name"
                   @bind="newUser.FirstName"
                   placeholder="First Name" />
        </div>

        <!-- Lastname -->
        <div class="form-group form-group-element">
            <input type="text"
                   class="form-control"
                   id="last_name"
                   @bind="newUser.LastName"
                   placeholder="Last Name" />
        </div>

        <!-- Email -->
        <div class="form-group form-group-element">
            <input type="email"
                   class="form-control"
                   id="email"
                   @bind="newUser.Email"
                   placeholder="Email" />
        </div>

        <!-- Password -->
        <div class="form-group form-group-element">
            <input type="password"
                   class="form-control"
                   id="password"
                   @bind="newUser.Password"
                   placeholder="Password" />
        </div>

        <!-- Confirm Password -->
        <div class="form-group form-group-element">
            <input type="password"
                   class="form-control"
                   id="conPassword"
                   @bind="conPass"
                   placeholder="Confirm Password" />
        </div>

        <!-- Login button only -->
        <div>
            <button type="submit" class="btn button btn-primary" style="margin-bottom: 10rem; width: 100%; margin-left: 0%">
                Add Admin
            </button>
        </div>
    </EditForm>
</div>



@code {
    private int? AdminId;
    private RegisterUserDto newUser = new RegisterUserDto();
    private string uploadedImage = string.Empty;
    private string errorMessage = string.Empty;
    private string conPass = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        if (!await service.IsUserAuthenticatedAsync())
        {
            navigate.NavigateTo("/unauthorized");
        }
        else
        {
            AdminId = await service.GetUserIdAsync() ?? 0;
        }
    }

    private async Task HandleAddAdmin()
    {
        toastService.ClearAll();

        if (newUser.Username != null && newUser.FirstName != null && newUser.LastName != null && newUser.Email != null && newUser.Password != null && uploadedImage != "" && newUser.Password == conPass)
        {
            var response = await SendAuthorizedRequest(HttpMethod.Post, "https://localhost:7095/api/User/add", JsonContent.Create(newUser));

            if (response.IsSuccessStatusCode)
            {
                var createdAdmin = await response.Content.ReadFromJsonAsync<User>();
                await UploadAdminImage(createdAdmin.Id);

                ClearForm();
                toastService.ShowSuccess("Admin created successfully");
                await Task.Delay(3000);
                navigate.NavigateTo("/viewAdmin");
            }
            else if (response.StatusCode == System.Net.HttpStatusCode.BadRequest || response.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                toastService.ShowError("Full Name Already Exist!");
            }
            else
            {
                toastService.ShowError("An error occured while adding the admin. Please try again later.");
            }
        }
        else if (newUser.Username == null && newUser.FirstName != null && newUser.LastName != null && newUser.Email != null && newUser.Password != null && uploadedImage != null && newUser.Password == conPass)
        {
            toastService.ShowError("Please fill-up Username.");
        }
        else if (newUser.Username != null && newUser.FirstName == null && newUser.LastName != null && newUser.Email != null && newUser.Password != null && uploadedImage != null && newUser.Password == conPass)
        {
            toastService.ShowError("Please fill-up First Name.");
        }
        else if (newUser.Username != null && newUser.FirstName != null && newUser.LastName == null && newUser.Email != null && newUser.Password != null && uploadedImage != null && newUser.Password == conPass)
        {
            toastService.ShowError("Please fill-up Last Name.");
        }
        else if (newUser.Username != null && newUser.FirstName != null && newUser.LastName != null && newUser.Email == null && newUser.Password != null && uploadedImage != null && newUser.Password == conPass)
        {
            toastService.ShowError("Please fill-up Email Address.");
        }
        else if (newUser.Username != null && newUser.FirstName != null && newUser.LastName != null && newUser.Email != null && newUser.Password == null && uploadedImage != null && newUser.Password == conPass)
        {
            toastService.ShowError("Please fill-up Password.");
        }
        else if (newUser.Username != null && newUser.FirstName != null && newUser.LastName != null && newUser.Email != null && newUser.Password != null && uploadedImage == "" && newUser.Password == conPass)
        {
            toastService.ShowError("Please Upload Image.");
        }
        else if (newUser.Username != null && newUser.FirstName != null && newUser.LastName != null && newUser.Email != null && newUser.Password != null && uploadedImage != null && newUser.Password != conPass)
        {
            toastService.ShowError("Password did not matched.");
        }
        else
        {
            toastService.ShowError("Please fill-up all fields.");
        }
    }

    private async Task UploadImage(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            var format = "image/png";
            using var stream = file.OpenReadStream();
            var buffer = new byte[file.Size];
            await stream.ReadAsync(buffer);
            uploadedImage = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
        }
    }

    private async Task UploadAdminImage(int adminId)
    {
        using var imageFile = new MultipartFormDataContent();
        var bytes = Convert.FromBase64String(uploadedImage.Split(',')[1]);
        imageFile.Add(new ByteArrayContent(bytes), "image", "upload.png");

        var response = await http.PostAsync($"https://localhost:7095/api/User/SaveAdminImage/{adminId}", imageFile);
    }

    private async Task<HttpResponseMessage> SendAuthorizedRequest(HttpMethod method, string url, HttpContent content = null)
    {
        var request = new HttpRequestMessage(method, url);
        request.Headers.Add("X-API-KEY", "KNOWLEDGESITEAPPAPI");

        if (content != null)
        {
            request.Content = content;
        }

        return await http.SendAsync(request);
    }

    private void ClearForm()
    {
        newUser = new RegisterUserDto();
        uploadedImage = string.Empty;
        errorMessage = string.Empty;
        conPass = string.Empty;
    }
}