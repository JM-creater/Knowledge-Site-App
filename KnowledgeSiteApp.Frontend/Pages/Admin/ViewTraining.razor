@page "/viewTraining"
@inject HttpClient http
@inject IJSRuntime js
@inject NavigationManager navigate
@layout AdminMainLayout
@inject AdminService service

<link rel="icon" type="image/x-icon" href="origami_bold_ico.ico" />
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link rel="stylesheet" type="text/css" href="css/view-trainings-stylesheet.css" />
<link rel="stylesheet" type="text/css" href="css/view-training-description.css" />
<link rel="stylesheet" type="text/css" href="css/main.css" />
<link rel="stylesheet" type="text/css" href="css/common-forms-stylesheet.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" />
<script language="javascript" type="text/javascript" src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js"></script>

@if (currentTraining != null)
{
    <div class="centered-container">
        <h2 style="
            font-weight: 700;
            font-size: 4vh;
            margin-left: 40%;
            margin-right: auto;
            text-align: left;
            margin-bottom: auto;
            color: #862b0d;
            ">
            @currentTraining.Title
        </h2>
    </div>
    <div style="margin-left: 1vh; margin-right: auto; margin-bottom: 5vh"
         class="centered-container left-flexbox">
        <!-- Training content -->
        <div class="container">
            <div class="item container-inside"
                 style="align-items: center; width: 60%; padding: 0px">
                <img style="
                width: 100%;
                height: 100%;
                aspect-ratio: 1/1;
                object-fit: cover;
                "
                     src=@($"https://localhost:7095/{currentTraining.Image}")
                     alt="Training Image" />
            </div>
            <div class="item right-flexbox"
                 style="align-items: center; width: 40%">
                <div class="item-inside" style="height: 100%">
                    <div class="form-group form-group-element">
                        <h4 style="
                        font-weight: 600;
                        font-size: 18px;
                        text-align: center;
                        margin-top: auto;
                        margin-bottom: 2vh;
                        color: #862b0d;
                        ">
                            Description
                        </h4>
                        <p style="font-size: inherit; text-align: justify">
                            @currentTraining.Description
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="edit-link">
        <a style="
          font-weight: 600;
          font-size: 20px;
          font-weight: bolder;
          text-align: center;
          margin-top: auto;
          margin-bottom: 2vh;
          color: #862b0d;
          cursor: pointer;
            "
           @onclick="EditCurrentTraining">
            Edit This Training
        </a>
    </div>

    <div>
        <button @onclick="() => GoToViewTopic(currentTraining.Id)">View Topics</button>
    </div>

    <div class="nav-buttons">
        <button style="
                  display: inline;
                  border-style: solid;
                  font-size: 50px;
                  color: #ffc95f;
                    "
                @onclick="PreviousTraining">
            <Icon CustomIconName="fa-solid fa-circle-arrow-left" />
        </button>
        <button style="
                  display: inline;
                  border-style: solid;
                  font-size: 50px;
                  color: #ffc95f;
                    "
                @onclick="NextTraining">
            <Icon CustomIconName="fa-solid fa-circle-arrow-right" />
        </button>
    </div>
}
else
{
    <p>No training selected or available.</p>
}


@code {
    [CascadingParameter] public int AdminId { get; set; }
    private Training[] trainings;
    private int currentIndex = 0;
    private Training currentTraining => currentIndex >= 0 && currentIndex < trainings?.Length
                                        ? trainings[currentIndex]
                                        : null;

    protected override async Task OnInitializedAsync()
    {
        if (AdminId == 0)
        {
            AdminId = await service.GetUserIdAsync() ?? 0;
        }

        var response = await http.GetFromJsonAsync<Training[]>($"https://localhost:7095/api/Training/trainingByAdminId/{AdminId}");
        trainings = response ?? Array.Empty<Training>();
        StateHasChanged();
    }

    private void EditCurrentTraining()
    {
        var currentTrainingId = currentTraining.Id;
        navigate.NavigateTo($"/editTraining/{currentTrainingId}");
    }

    private void NextTraining()
    {
        if (currentIndex < trainings.Length - 1)
        {
            currentIndex++;
            StateHasChanged();
        }
    }

    private void PreviousTraining()
    {
        if (currentIndex > 0)
        {
            currentIndex--;
            StateHasChanged();
        }
    }

    private void GoToViewTopic(int trainingId)
    {
        navigate.NavigateTo($"/viewTopics/{trainingId}");
    }
}